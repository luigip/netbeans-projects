package projecteuler;

import java.awt.Dimension;

public class LaunchFrame extends javax.swing.JFrame {

    /** Creates new form LaunchFrame */
    public LaunchFrame() {
        initComponents();

        ButtonPanel leftPanel = new ButtonPanel();
        ButtonPanel rightPanel = new ButtonPanel();
        leftScrollPane.setViewportView(leftPanel);
        lowerSplitPane.setRightComponent(rightPanel);

        leftPanel.setMinimumSize(new Dimension(200, 100)); //doesn't make a difference
        rightPanel.setMinimumSize(new Dimension(200, 100)); //required
//
////        leftScrollPane.setMinimumSize(new Dimension(150,100)); //not required
//
////        upDownSplitPane.setPreferredSize(new Dimension(1000, 600)); //doesn't do anything
//        rightPanel.setPreferredSize(new Dimension(200, 300)); // changes panel size
//        leftPanel.setPreferredSize(new Dimension(200, 300)); // required, else left panel very wide.
//                    // seems to work as a minimum size within the scroll panel
//                    // & only get vertical scrollbar below preferred size... but panel is always this big as a minimum
//                    // (not good since scrollbar is always present
//        leftScrollPane.setPreferredSize(new Dimension(200, 100));
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        upDownSplitPane = new javax.swing.JSplitPane();
        lowerSplitPane = new javax.swing.JSplitPane();
        leftScrollPane = new javax.swing.JScrollPane();
        upperScrollPane = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        upDownSplitPane.setDividerLocation(100);
        upDownSplitPane.setDividerSize(10);
        upDownSplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        lowerSplitPane.setDividerSize(10);
        lowerSplitPane.setResizeWeight(0.5);
        lowerSplitPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lowerSplitPane.setLeftComponent(leftScrollPane);

        upDownSplitPane.setRightComponent(lowerSplitPane);
        upDownSplitPane.setLeftComponent(upperScrollPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(upDownSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 656, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(upDownSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LaunchFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane leftScrollPane;
    private javax.swing.JSplitPane lowerSplitPane;
    private javax.swing.JSplitPane upDownSplitPane;
    private javax.swing.JScrollPane upperScrollPane;
    // End of variables declaration//GEN-END:variables

}
